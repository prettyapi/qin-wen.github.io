{"pages":[],"posts":[{"title":"阅读JVM Specification","text":"The Java Virtual Machine Instruction SetAssumptions: The Meaning of “Must”Reserved Opcodes three opcodes are reserved for internal use by a Java Virtual Machine implementation. If the instruction set of the Java Virtual Machine is extended in the future, these reserved opcodes are guaranteed not to be used.","link":"/2018/09/26/Java-READ-Jvm-specification/"},{"title":"Java基础类型的自动拆装箱机制","text":"What?如下面的例子,在Java语言中,我可以为用包装后的类型直接为基础类型赋值,反之亦然. 12345678public class Unboxing { public void test() { //自动装箱 Integer count = 99; //自定拆箱 int sum = count; }} Why?通过字节码,看看编译器默默为我们做了什么. 123456789Code: stack=1, locals=3, args_size=1 0: bipush 99 2: invokestatic #2 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer; 5: astore_1 6: aload_1 7: invokevirtual #3 // Method java/lang/Integer.intValue:()I 10: istore_2 11: return 通过分析字节码,可以很清楚的看到,自动装箱过程中,编译器帮我们自动调用了Integer.valueOf:(I)[^1]和Integer.intValue:()方法来进行装箱和拆箱操作. 示例中的代码等价于 12345678public class Unboxing { public void test() { //自动装箱 Integer count = Integer.valueOf(99); //自定拆箱 int sum = count.intValue(); }} Integer.valueOf(I)方法具体实现见Java中Integer实现 How?通过上面的等价代码,很容易理解为什么拆箱过程中,可能出现的空指针异常的原因. [^2][^3][^1]: I 表示int类型[^2]: http://www.google.com[^3]: http://www.google.com","link":"/2018/09/20/Java-boxing-unboxing/"},{"title":"java_Integer","text":"123456public static Integer valueOf(int i) { //处于缓存区间的值 直接取缓存 if (i &gt;= IntegerCache.low &amp;&amp; i &lt;= IntegerCache.high) return IntegerCache.cache[i + (-IntegerCache.low)]; return new Integer(i);}","link":"/2018/09/25/java-Integer/"},{"title":"Hello World","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","link":"/2018/09/19/hello-world/"},{"title":"JVM指令学习(2) aload_<n> & astore_<n>","text":"1. aload index, aload_\\Load reference from local variable forms12345aload = 25 (0x19)aload_0 = 42 (0x2a)aload_1 = 43 (0x2b)aload_2 = 44 (0x2c)aload_3 = 45 (0x2d) opstack12... →..., objectref 2. astore index, astore_\\Store reference into local variable forms12345astore = 58 (0x3a)astore_0 = 75 (0x4b)astore_1 = 76 (0x4c)astore_2 = 77 (0x4d)astore_3 = 78 (0x4e) opstack12..., objectref →... DescriptionThe &lt;n&gt; must be an index into the local variable array of the current frame (§2.6). The objectref on the top of the operand stack must be of type returnAddress or of type reference. It is popped from the operand stack, and the value of the local variable at &lt;n&gt; is set to objectref.","link":"/2018/09/28/java-JVM-instruction-2/"},{"title":"JVM指令学习(4) aload, astore指令","text":"","link":"/2018/09/28/java-JVM-instruction-4/"},{"title":"JVM指令学习(3) anewarray指令","text":"anewarray指令##Operation Create new array of reference ##Formatanewarrayindexbyte1indexbyte2 Formsanewarray = 189 (0xbd)Operand Stack …, count → …, arrayref","link":"/2018/09/28/java-JVM-instruction-3/"},{"title":"JVM指令学习(1) aaload && aastore","text":"aa操作 array reference相关的操作aaload从array中载入一个reference, 参数都在操作数栈上 12..., arrayref, index -&gt;..., value(reference) arrayref 必须是一个指向成员是reference的引用(reference)index 必须是一个int类型value 是aaload操作取回来,并放在opstack顶部 aastore存储一个reference值到数组的相应位置中 12..., arrayref, index, value -&gt;..., arrayref 必须是一个指向成员是reference的引用(reference)index 必须是一个int类型操作结束后三个参数都从opstack中弹出 总结 这个两个aa型的opcode参数全部由opstack栈顶给出 index必须为int型,从JVM层面上限制了JVM语言中数组的最大长度为Integer.MAX_VALUE (231-1)","link":"/2018/09/26/java-JVM-instructions/"},{"title":"java_OOM","text":"","link":"/2018/09/25/java-OOM/"},{"title":"java_des","text":"","link":"/2018/09/25/java-des/"},{"title":"java_empty_list","text":"","link":"/2018/09/25/java-empty-list/"},{"title":"java_http_media","text":"","link":"/2018/09/25/java-http-media/"},{"title":"Java Unsafe类的应用","text":"Unsafa的应用","link":"/2018/09/19/java-unsafe/"},{"title":"test","text":"","link":"/2018/09/19/test/"}],"tags":[{"name":"java","slug":"java","link":"/tags/java/"}],"categories":[]}